{"version":3,"sources":["data.js","functions.js","App.js","index.js"],"names":["data","id","option0","option1","option2","option3","option4","src","option5","option6","dietFunc","diet","parseFloat","naturalGasFunc","naturalGas","electricityFunc","electricity","fuelOilFunc","fuelOil","propaneFunc","propane","wasteFunc","waste","carFunc","car","flightFunc","flight","App","useState","setDiet","setNaturalGas","setElectricity","setFuelOil","setPropane","setWaste","setCar","setFlight","emission","setEmission","className","onSubmit","e","preventDefault","values","sum","i","length","window","scrollTo","document","body","scrollHeight","htmlFor","type","name","value","toString","onChange","target","toFixed","class","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.60085a3b.chunk.js","sourcesContent":["export const data = [\n    {\n        id: 0,\n        option0: 3.3,\n        option1: 2.5,\n        option2: 1.9,\n        option3: 1.7,\n        option4: 1.5,\n        src: 'https://www.conservation.org/carbon-footprint-calculator#/'\n    },\n    {\n        id: 1,\n        option0: 3071 * 0.75 / 2204.6,\n        option1: 3071 / 2204.6,\n        option2: 3071 * 1.25 / 2204.6,\n        src: 'https://www3.epa.gov/carbon-footprint-calculator/'\n    },\n    {\n        id: 2,\n        option0: 5455 * 0.75 / 2204.6,\n        option1: 5455 / 2204.6,\n        option2: 5455 * 1.25 / 2204.6,\n        src: 'https://www3.epa.gov/carbon-footprint-calculator/'\n    },\n    {\n        id: 3, \n        option0: 0,\n        option1: 4848 * 0.75 / 2204.6,\n        option2: 4848 / 2204.6,\n        option3: 4848 * 1.25 / 2204.6,\n        src: 'https://www3.epa.gov/carbon-footprint-calculator/'\n    },\n    {\n        id: 4,\n        option0: 0,\n        option1: 2243 * 0.75 / 2204.6,\n        option2: 2243 / 2204.6,\n        option3: 2243 * 1.25 / 2204.6,\n        src: 'https://www3.epa.gov/carbon-footprint-calculator/'\n    },\n    {\n        id: 5,\n        option0: 692 / 2204.6,\n        option1: (692 - 89.38/2 - 35.56/2 - 25.39/2 - 113.14/2 - 27.46/2) / 2204.6,\n        option2: (692 - 89.38 - 35.56 - 25.39 - 113.14 - 27.46) / 2204.6,\n        src: 'https://www3.epa.gov/carbon-footprint-calculator/'\n    },\n    {\n        id: 6,\n        option0: 0,\n        option1: 10484 * 0.75 / 2 / 2204.6,\n        option2: 10484 / 2 / 2204.6,\n        option3: 10484 * 1.25 / 2 / 2204.6,\n        src: 'https://www3.epa.gov/carbon-footprint-calculator/'\n    },\n    {\n        id: 7,\n        option0: 0,\n        option1: 816.63 * 0.75 * 0.00014,\n        option2: 816.63 * 0.00014,\n        option3: 816.63 * 1.25 * 0.00014,\n        option4: 816.63 * 3 * 0.00017,\n        option5: 816.63 * 5 * 0.00017,\n        option6: 816.63 * 10 * 0.00017,\n        src: ['https://www.statista.com/statistics/742763/regional-carriers-average-passenger-trip-length/', 'https://www.conservation.org/carbon-footprint-calculator#/']\n    }\n]","import { data } from './data'\n\nexport function dietFunc(diet) {\n    if(parseFloat(diet) >= data[0].option1){\n        return <li>Eat more plant-based food</li>\n    }\n}\n\nexport function naturalGasFunc(naturalGas) {\n    if(parseFloat(naturalGas) >= data[1].option1) {\n        return <li>Use less natural gas by using cold water for washing when possible, heating your house less frequently, installing programmable thermostats...</li>\n    }\n}\n\nexport function electricityFunc(electricity) {\n    if(parseFloat(electricity) >= data[2].option1) {\n        return <li>Use less electricity by turning off unnecessary water, lights and AC, unpluging unused electronics, running full loads in laundry...</li>\n    }\n}\n\nexport function fuelOilFunc(fuelOil) {\n    if(parseFloat(fuelOil) >= data[3].option2) {\n        return <li>Use less fuel oils by heating your home or using furnaces less frequently</li>\n    }\n}\n\nexport function propaneFunc(propane) {\n    if(parseFloat(propane) >= data[4].option2) {\n        return <li>Use less propane by sealing air leaks, lowering hot water thermostat, and closing doors in unused rooms</li>\n    }\n}\n\nexport function wasteFunc(waste) {\n    if(parseFloat(waste) >= data[5].option1) {\n        return <li>Recycle more (batteries, beverage containers, electronics, hazardous waste, metals, papers, plastics, food waste) and buy more recycled products</li>\n    }\n}\n\nexport function carFunc(car) {\n    if(parseFloat(car) >= data[6].option2) {\n        return <li>Drive less. Walk, cycle, and take public transportation more</li>\n    }\n}\n\nexport function flightFunc(flight) {\n    if(parseFloat(flight) >= data[7].option2) {\n        return <li>Reduce unnecessary flights and switch to other transportations like trains and buses</li>\n    }\n}\n\n","import React, { useState } from 'react'\nimport { data } from './data'\nimport { dietFunc, naturalGasFunc, electricityFunc, fuelOilFunc, propaneFunc, wasteFunc, carFunc, flightFunc } from './functions'\n\nfunction App() {\n  const [diet, setDiet] = useState(0)\n  const [naturalGas, setNaturalGas] = useState('')\n  const [electricity, setElectricity] = useState('')\n  const [fuelOil, setFuelOil] = useState('')\n  const [propane, setPropane] = useState('')\n  const [waste, setWaste] = useState('')\n  const [car, setCar] = useState('')\n  const [flight, setFlight] = useState('')\n  const [emission, setEmission] = useState(0)\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const values = [diet, naturalGas, electricity, fuelOil, propane, waste, car, flight]\n    var sum = 0\n    for (var i = 0; i < values.length; i++){\n      sum += parseFloat(values[i])\n    }\n    setEmission(sum)\n    window.scrollTo(0,document.body.scrollHeight);\n  }\n\n  return(\n      <div className=\"app\">\n        <div className=\"main\">\n          <div className=\"title\">\n            <p>Carbon Footprint Calculator</p>\n          </div>\n          <div className=\"slogan\">\n            <b>Understand your carbon emission</b>\n          </div>\n          <form className=\"input\" onSubmit={handleSubmit}>\n            <div className=\"input-box\">\n              <div className=\"diet\">\n                <p className=\"questions\">\n                  How would you categorize your diet?\n                </p>\n                <div className=\"answers\">\n                  <div className=\"block\" id=\"block-11\">\n                    <label htmlFor=\"option-00\">\n                    <input type=\"radio\" name=\"diet\" value={data[0].option0.toString()} id=\"option-00\" onChange={(e) => setDiet(e.target.value)}/>\n                      Meat Lover\n                    </label>\n                    <label htmlFor=\"option-01\">\n                      <input type=\"radio\" name=\"diet\" value={data[0].option1.toString()} id=\"option-01\" onChange={(e) => setDiet(e.target.value)}/>\n                      Average\n                    </label>\n                    <label htmlFor=\"option-02\">\n                      <input type=\"radio\" name=\"diet\" value={data[0].option2.toString()} id=\"option-02\" onChange={(e) => setDiet(e.target.value)}/>\n                      No Beef\n                    </label>\n                    <label htmlFor=\"option-03\">\n                      <input type=\"radio\" name=\"diet\" value={data[0].option3.toString()} id=\"option-03\" onChange={(e) => setDiet(e.target.value)}/>\n                      Vegetarian\n                    </label>\n                    <label htmlFor=\"option-04\">\n                      <input type=\"radio\" name=\"diet\" value={data[0].option4.toString()}id=\"option-04\" onChange={(e) => setDiet(e.target.value)}/>\n                      Vegan\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"natural-gas\">\n                <p className=\"questions\">\n                  How would you categorize your natural gas usage (residential energy consumption)?\n                </p>\n                <div className=\"answers\">\n                  <div className=\"block\" id=\"block-11\">\n                    <label htmlFor=\"option-10\">\n                      <input type=\"radio\" name=\"natural-gas\" value={data[1].option0.toString()} id=\"option-10\" onChange={(e) => setNaturalGas(e.target.value)}/>\n                      Below Average (1605 m<sup>3</sup>/month)\n                    </label>\n                    <label htmlFor=\"option-11\">\n                      <input type=\"radio\" name=\"natural-gas\" value={data[1].option1.toString()} id=\"option-11\" onChange={(e) => setNaturalGas(e.target.value)}/>\n                      Average (2140 m<sup>3</sup>/month)\n                    </label>\n                    <label htmlFor=\"option-12\">\n                      <input type=\"radio\" name=\"natural-gas\" value={data[1].option2.toString()} id=\"option-12\" onChange={(e) => setNaturalGas(e.target.value)}/>\n                      Above Average (2675 m<sup>3</sup>/month)\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"electrcity\">\n                <p className=\"questions\">\n                  How would you categorize your electricity usage?\n                </p>\n                <div className=\"answers\">\n                  <div className=\"block\" id=\"block-11\">\n                    <label htmlFor=\"option-20\">\n                      <input type=\"radio\" name=\"electricity\" value={data[2].option0.toString()} id=\"option-20\" onChange={(e) => setElectricity(e.target.value)}/>\n                      Below Average (275 kWh/month)\n                    </label>\n                    <label htmlFor=\"option-21\">\n                      <input type=\"radio\" name=\"electricity\" value={data[2].option1.toString()} id=\"option-21\" onChange={(e) => setElectricity(e.target.value)}/>\n                      Average (367 kWh/month)\n                    </label>\n                    <label htmlFor=\"option-22\">\n                      <input type=\"radio\" name=\"electricity\" value={data[2].option2.toString()} id=\"option-22\" onChange={(e) => setElectricity(e.target.value)}/>\n                      Above Average (459 kWh/month)\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"fuel-oil\">\n                <p className=\"questions\">\n                  How would you categorize your fuel oil usage(heat your home and car)?\n                </p>\n                <div className=\"answers\">\n                  <div className=\"block\" id=\"block-11\">\n                    <label htmlFor=\"option-30\">\n                      <input type=\"radio\" name=\"fuel-oil\" value={data[3].option0.toString()} id=\"option-30\" onChange={(e) => setFuelOil(e.target.value)}/>\n                      Zero\n                    </label>\n                    <label htmlFor=\"option-31\">\n                      <input type=\"radio\" name=\"fuel-oil\" value={data[3].option1.toString()} id=\"option-31\" onChange={(e) => setFuelOil(e.target.value)}/>\n                      Below Average (34.5 gallons/month)\n                    </label>\n                    <label htmlFor=\"option-32\">\n                      <input type=\"radio\" name=\"fuel-oil\" value={data[3].option2.toString()} id=\"option-32\" onChange={(e) => setFuelOil(e.target.value)}/>\n                      Average (46 gallons/month)\n                    </label>\n                    <label htmlFor=\"option-33\">\n                      <input type=\"radio\" name=\"fuel-oil\" value={data[3].option3.toString()} id=\"option-33\" onChange={(e) => setFuelOil(e.target.value)}/>\n                      Above Average (57.5 gallons/month)\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"propane\">\n                <p className=\"questions\">\n                  How would you categorize your propane usage (water heating, cooking, refrigerating, clothes drying)?\n                </p>\n                <div className=\"answers\">\n                  <div className=\"block\" id=\"block-11\">\n                    <label htmlFor=\"option-40\">\n                      <input type=\"radio\" name=\"propane\" value={data[4].option0.toString()} id=\"option-40\" onChange={(e) => setPropane(e.target.value)}/>\n                      Zero\n                    </label>\n                    <label htmlFor=\"option-41\">\n                      <input type=\"radio\" name=\"propane\" value={data[4].option1.toString()} id=\"option-41\" onChange={(e) => setPropane(e.target.value)}/>\n                      Below Average (29.25 gallons/month)\n                    </label>\n                    <label htmlFor=\"option-42\">\n                      <input type=\"radio\" name=\"propane\" value={data[4].option2.toString()} id=\"option-42\" onChange={(e) => setPropane(e.target.value)}/>\n                      Average (39 gallons/month)\n                    </label>\n                    <label htmlFor=\"option-43\">\n                      <input type=\"radio\" name=\"propane\" value={data[4].option3.toString()} id=\"option-43\" onChange={(e) => setPropane(e.target.value)}/>\n                      Above Average (48.75 gallons/month)\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"waste\">\n                <p className=\"questions\">\n                  How would you categorize your recycling (liquid, solid, organic, recyclable, hazardou)?\n                </p>\n                <div className=\"answers\">\n                  <div className=\"block\" id=\"block-11\">\n                    <label htmlFor=\"option-50\">\n                      <input type=\"radio\" name=\"waste\" value={data[5].option0.toString()} id=\"option-50\" onChange={(e) => setWaste(e.target.value)}/>\n                      I don't recycle\n                    </label>\n                    <label htmlFor=\"option-51\">\n                      <input type=\"radio\" name=\"waste\" value={data[5].option1.toString()} id=\"option-51\" onChange={(e) => setWaste(e.target.value)}/>\n                      I recycle around half of my recyclable waste, including metal, plastic, glass, and paper\n                    </label>\n                    <label htmlFor=\"option-52\">\n                      <input type=\"radio\" name=\"waste\" value={data[5].option2.toString()} id=\"option-52\" onChange={(e) => setWaste(e.target.value)}/>\n                      I recycle all of my recyclable waste, including metal, plastic, glass, and paper\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"car\">\n                <p className=\"questions\">\n                  How often do you drive your car?\n                </p>\n                <div className=\"answers\">\n                  <div className=\"block\" id=\"block-11\">\n                    <label htmlFor=\"option-60\">\n                      <input type=\"radio\" name=\"car\" value={data[6].option0.toString()} id=\"option-60\" onChange={(e) => setCar(e.target.value)}/>\n                      I don't drive a car\n                    </label>\n                    <label htmlFor=\"option-61\">\n                      <input type=\"radio\" name=\"car\" value={data[6].option1.toString()} id=\"option-61\" onChange={(e) => setCar(e.target.value)}/>\n                      I sometimes drive a car \n                    </label>\n                    <label htmlFor=\"option-62\">\n                      <input type=\"radio\" name=\"car\" value={data[6].option2.toString()} id=\"option-62\" onChange={(e) => setCar(e.target.value)}/>\n                      Average\n                    </label>\n                    <label htmlFor=\"option-63\">\n                      <input type=\"radio\" name=\"car\" value={data[6].option3.toString()} id=\"option-63\" onChange={(e) => setCar(e.target.value)}/>\n                      I drive a car all the time\n                    </label>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flight\">\n                <p className=\"questions\">\n                  What's your approximate flight distance for one year? (Average: 816.63 miles)\n                </p>\n                <div className=\"answers\">\n                  <div className=\"block\" id=\"block-11\">\n                    <label htmlFor=\"option-70\">\n                      <input type=\"radio\" name=\"flight\" value={data[7].option0.toString()} id=\"option-70\" onChange={(e) => setFlight(e.target.value)}/>\n                      0\n                    </label>\n                    <label htmlFor=\"option-71\">\n                      <input type=\"radio\" name=\"flight\" value={data[7].option1.toString()} id=\"option-71\" onChange={(e) => setFlight(e.target.value)}/>\n                      612 miles\n                    </label>\n                    <label htmlFor=\"option-72\">\n                      <input type=\"radio\" name=\"flight\" value={data[7].option2.toString()} id=\"option-72\" onChange={(e) => setFlight(e.target.value)}/>\n                      817 miles (Average)\n                    </label>\n                    <label htmlFor=\"option-73\">\n                      <input type=\"radio\" name=\"flight\" value={data[7].option3.toString()} id=\"option-73\" onChange={(e) => setFlight(e.target.value)}/>\n                      1021 miles\n                    </label>\n                    <label htmlFor=\"option-74\">\n                      <input type=\"radio\" name=\"flight\" value={data[7].option4.toString()} id=\"option-74\" onChange={(e) => setFlight(e.target.value)}/>\n                      2450 miles\n                    </label>\n                    <label htmlFor=\"option-75\">\n                      <input type=\"radio\" name=\"flight\" value={data[7].option5.toString()} id=\"option-75\" onChange={(e) => setFlight(e.target.value)}/>\n                      4083 miles\n                    </label>\n                    <label htmlFor=\"option-76\">\n                      <input type=\"radio\" name=\"flight\" value={data[7].option6.toString()} id=\"option-76\" onChange={(e) => setFlight(e.target.value)}/>\n                      8166 miles\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"btn\">\n              <button type=\"submit\">Calculate</button>\n            </div>\n          </form>\n          <div className=\"result\">\n            <div className=\"result-box\">\n              Your annual emission is {emission.toFixed(2)} metric tons or {(emission * 2204.62).toFixed(0)} lbs of CO2\n              <br />\n              Average: 12.32 metric tons\n              <br />\n              <br />\n              Your emission requires {(emission * 2204.62 / 48).toFixed(0)} trees\n                <span class=\"material-icons\">\n                  park\n                </span>\n                <span class=\"material-icons\">\n                  park\n                </span>\n                <span class=\"material-icons\">\n                 park\n                </span>\n              to absorb\n              <br />\n              But...\n            </div>\n          </div>\n          <div className=\"improvement\">\n            <div className=\"improvement-box\">\n              <p>\n                Based on your answers, you can do these to help the planet:\n              </p>\n              <ul>\n                {dietFunc(diet)}\n                {naturalGasFunc(naturalGas)}\n                {electricityFunc(electricity)}\n                {fuelOilFunc(fuelOil)}\n                {propaneFunc(propane)}\n                {wasteFunc(waste)}\n                {carFunc(car)}\n                {flightFunc(flight)}\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}